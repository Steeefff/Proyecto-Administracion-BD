package RespaldosBD;

import BaseDatos.Funcionalidad;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AdminEstadisticas extends javax.swing.JFrame 
{
    
    public Opciones op;//se va a igualar a la ventana principal, así no se pierde la referencia de la conexión
    public String usuario;
    public String contraseña;
    public Funcionalidad db;
    List<String> listDirectorios = new ArrayList<String>();
    ResultSet resultado;
    
    
    public AdminEstadisticas() 
    {
        initComponents(); //Carga los elementos del JFrame o JPanel
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                    }
                }
            }catch(ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(CrearRespaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        
        this.setLocationRelativeTo(null); //Centa la pantalla
        this.setTitle("Administración de Estadísticas"); //Título
        setResizable(false);
        this.buttonGroup1.add(this.rbTabla);
        this.buttonGroup1.add(this.rbSchema);
        this.cbTablas.setEnabled(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnRegresar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        rbTabla = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGenerarStats = new javax.swing.JButton();
        cbTablas = new javax.swing.JComboBox<String>();
        btnVerStats = new javax.swing.JButton();
        rbSchema = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        submenu2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegresar.setText("Regresar al Menú");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        lblTitulo.setBackground(new java.awt.Color(255, 0, 0));
        lblTitulo.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Administración de Estadísticas");
        lblTitulo.setOpaque(true);

        rbTabla.setText("Tablas");
        rbTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTablaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Schema", "Tabla", "Registros", "Ultimo Analisis"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnGenerarStats.setText("Generar Estadisticas");
        btnGenerarStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarStatsActionPerformed(evt);
            }
        });

        cbTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTablasActionPerformed(evt);
            }
        });

        btnVerStats.setText("Ver Estadisticas");
        btnVerStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerStatsActionPerformed(evt);
            }
        });

        rbSchema.setText("Schema");
        rbSchema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSchemaActionPerformed(evt);
            }
        });

        jMenu1.setText("Opciones");

        submenu2.setText("Salir");
        submenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu2ActionPerformed(evt);
            }
        });
        jMenu1.add(submenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(rbTabla)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbTablas, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(rbSchema)
                                .addGap(37, 37, 37)
                                .addComponent(btnGenerarStats)
                                .addGap(18, 18, 18)
                                .addComponent(btnVerStats)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(37, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbTabla)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbSchema)
                        .addComponent(btnVerStats)
                        .addComponent(btnGenerarStats)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(176, 176, 176)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(176, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //////////////////////////////////////////////////  ACCIONES  ////////////////////////////////////////////////////////
    
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        op.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void submenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_submenu2ActionPerformed

    private void rbTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTablaActionPerformed
        // TODO add your handling code here:
        this.cbTablas.setEnabled(true);
        cbTablas.setSelectedItem(cbTablas.getItemAt(0));
    }//GEN-LAST:event_rbTablaActionPerformed

    private void btnGenerarStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarStatsActionPerformed
        // TODO add your handling code here:
        this.GenerarEstadisticas();
    }//GEN-LAST:event_btnGenerarStatsActionPerformed

    private void cbTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTablasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTablasActionPerformed

    private void btnVerStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerStatsActionPerformed
        // TODO add your handling code here:
        this.llenarGrid();
    }//GEN-LAST:event_btnVerStatsActionPerformed

    private void rbSchemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSchemaActionPerformed
        // TODO add your handling code here:
        this.cbTablas.setEnabled(false);
    }//GEN-LAST:event_rbSchemaActionPerformed

    //////////////////////////////////////////////////  METODOS  ////////////////////////////////////////////////////////
    
    public void cargarTablasUsuario()//metodo de cargar directorios
    {
        ResultSet resultado = db.cargarTablasUsuario(usuario);
       

        cbTablas.removeAllItems();
             try {
                 while(resultado.next())
                 {
                         cbTablas.addItem(resultado.getString("TABLE_NAME"));
                         
                 }
                 cbTablas.setSelectedIndex(-1);
                
             } catch (SQLException ex) {
                 Logger.getLogger(AdminEstadisticas.class.getName()).log(Level.SEVERE, null, ex);
             }
    }
     
     public void GenerarEstadisticas()
     {
         
         if(this.rbTabla.isSelected())
         {
             db.GeneraStats(usuario,this.cbTablas.getSelectedItem().toString());       
         }
         
         else if(this.rbSchema.isSelected())
         {
             db.GeneraStats(usuario,"Schema");   
         }
         
         else
         {
           JOptionPane.showMessageDialog(null, "Debe seleccionar alguna opción", "Error al Generar Estadisticas",JOptionPane.ERROR_MESSAGE);
         }
     }
     
     public void llenarGrid()
     {
         ResultSet resultado;
         DefaultTableModel modelo = (DefaultTableModel) this.jTable1.getModel();
         
         
         for (int i = 0; i < jTable1.getRowCount(); i++) 
         {
             modelo.removeRow(i);
             i-=1;
         }
         
         if(this.rbTabla.isSelected())
         {
              resultado= db.ConsultaStats(usuario,this.cbTablas.getSelectedItem().toString());
              
              this.jTable1.removeAll();
              try
                {
                    Object [] fila=new Object[4];
                    resultado.next();
                    fila[0]=resultado.getString("OWNER");
                    fila[1]=resultado.getString("TABLE_NAME");
                    fila[2]=resultado.getString("NUM_ROWS");
                    fila[3]=resultado.getString("LAST_ANALYZED");
                    modelo.addRow(fila);
                    jTable1.setModel(modelo);
                }
                catch(SQLException ex)
                {
                    Logger.getLogger(AdminEstadisticas.class.getName()).log(Level.SEVERE, null, ex);
                }
             
         }
         else if(this.rbSchema.isSelected())
         {
            resultado = db.ConsultaStats(usuario,"Schema");
            try
                {
                   
                   while(resultado.next())
                   {
                        Object [] fila=new Object[4];
                        fila[0]=resultado.getString("OWNER");
                        fila[1]=resultado.getString("TABLE_NAME");
                        fila[2]=resultado.getString("NUM_ROWS");
                        fila[3]=resultado.getString("LAST_ANALYZED"); 
                        modelo.addRow(fila);      
                   }
                   
                   jTable1.setModel(modelo);
                }
                catch(SQLException ex)
                {
                    Logger.getLogger(AdminEstadisticas.class.getName()).log(Level.SEVERE, null, ex);
                }
         }
         else
         {
           JOptionPane.showMessageDialog(null, "Debe seleccionar alguna opción", "Error al Cargar Estadisticas",JOptionPane.ERROR_MESSAGE);
         }
         
         
         
     }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarStats;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnVerStats;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbTablas;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JRadioButton rbSchema;
    private javax.swing.JRadioButton rbTabla;
    private javax.swing.JMenuItem submenu2;
    // End of variables declaration//GEN-END:variables
}
