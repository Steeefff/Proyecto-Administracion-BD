package RespaldosBD;

import BaseDatos.Funcionalidad;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class AdminDirectorios extends javax.swing.JFrame 
{
    
    public Opciones op;//se va a igualar a la ventana principal, así no se pierde la referencia de la conexión
    public String usuario;
    public String contraseña;
    public Funcionalidad db;
    List<String> listDirectorios = new ArrayList<String>();
    ResultSet resultado;
    

    public AdminDirectorios() 
    {
        initComponents(); //Carda los elementos del JFrame o JPanel

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                    }
                }
            }catch(ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(CrearRespaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        this.setLocationRelativeTo(null); //Centa la pantalla
        this.setTitle("Administración de Directorios"); //Título
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegresar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        boxDirectorios = new javax.swing.JComboBox<String>();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtxtArea = new javax.swing.JTextArea();
        lblListaRespaldos = new javax.swing.JLabel();
        btnCrearDirectorio = new javax.swing.JButton();
        comboUsuarios = new javax.swing.JComboBox<String>();
        lblDirectorio = new javax.swing.JLabel();
        btnBorrarDir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        submenu2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegresar.setText("Regresar al Menú");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        lblTitulo.setBackground(new java.awt.Color(255, 0, 0));
        lblTitulo.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Administración de Directorios");
        lblTitulo.setOpaque(true);

        boxDirectorios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxDirectoriosItemStateChanged(evt);
            }
        });

        JtxtArea.setEditable(false);
        JtxtArea.setColumns(20);
        JtxtArea.setRows(5);
        jScrollPane1.setViewportView(JtxtArea);

        lblListaRespaldos.setText("Respaldos que hay en el directorio del usuario actual ");

        btnCrearDirectorio.setText("Crear Directorio");
        btnCrearDirectorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearDirectorioActionPerformed(evt);
            }
        });

        lblDirectorio.setText("Seleccione el usuario al que le creará un nuevo directorio");

        btnBorrarDir.setText("Borrar Directorio");
        btnBorrarDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarDirActionPerformed(evt);
            }
        });

        jMenu1.setText("Opciones");

        submenu2.setText("Salir");
        submenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu2ActionPerformed(evt);
            }
        });
        jMenu1.add(submenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblListaRespaldos, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDirectorio)
                        .addGap(18, 18, 18)
                        .addComponent(comboUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCrearDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boxDirectorios, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnBorrarDir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxDirectorios, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrarDir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblListaRespaldos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDirectorio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //////////////////////////////////////////////////  ACCIONES  ////////////////////////////////////////////////////////
    
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed

        op.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void submenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_submenu2ActionPerformed

    private void boxDirectoriosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxDirectoriosItemStateChanged
        if(listDirectorios.size() > 0 && boxDirectorios.getSelectedIndex() != -1 ){
            JtxtArea.setText("");//para limpiar el jtext cada vez que se cambia de opcion
            String sDirectorio=listDirectorios.get(boxDirectorios.getSelectedIndex()); //Directorio de elemento seleccionado
            File f=new File(sDirectorio);

            if(f.exists()){
                File[] ficheros=f.listFiles();
                for(int x=0; x<ficheros.length; x++)
                    JtxtArea.append(ficheros[x].getName()+"\n");  
            }
        }
       
    }//GEN-LAST:event_boxDirectoriosItemStateChanged

    private void btnCrearDirectorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearDirectorioActionPerformed
        if(comboUsuarios.getSelectedIndex()!=-1){
            JFileChooser dirCarpeta = new JFileChooser();
            dirCarpeta.showSaveDialog(null);

            File crearCarpeta = dirCarpeta.getSelectedFile();


            if(!crearCarpeta.exists()){
                crearCarpeta.mkdir();

                String dirNuevo = JOptionPane.showInputDialog(null, "Ingrese el nombre del nuevo directorio", "Nuevo Directorio", JOptionPane.OK_CANCEL_OPTION);
                if(dirNuevo!=null){
                    if(db.crearDirectorio(dirNuevo, dirCarpeta.getSelectedFile().getPath(),(String)comboUsuarios.getSelectedItem()))
                        JOptionPane.showMessageDialog(null, "El directorio fue creado con exito","",JOptionPane.INFORMATION_MESSAGE);
                
                    cargarDirectorios();
                    JtxtArea.setText("");
                }
            }
            else {
                if(crearCarpeta.exists())
                    JOptionPane.showMessageDialog(null, "El directorio ya existe"); 
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar un usuario","", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnCrearDirectorioActionPerformed

    private void btnBorrarDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarDirActionPerformed
        if(boxDirectorios.getSelectedIndex()!=-1){
            if(db.EliminarDirectorio((String)boxDirectorios.getSelectedItem()))
              JOptionPane.showMessageDialog(null, "El directorio fue eliminado con exito","",JOptionPane.INFORMATION_MESSAGE);
            
            
            cargarDirectorios();
            JtxtArea.setText("");
        }
        else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar un directorio para borrar","", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrarDirActionPerformed

    
      //////////////////////////////////////////////////  METODOS  ////////////////////////////////////////////////////////
    
    public void cargarDirectorios()//metodo de cargar directorios
    {
        ResultSet resultado = db.cargarDirectorios();

        boxDirectorios.removeAllItems();
        listDirectorios.clear();

             try {
                 while(resultado.next())
                 {
                         boxDirectorios.addItem(resultado.getString(1));
                         listDirectorios.add(resultado.getString(2));

                 }
                 boxDirectorios.setSelectedIndex(-1);
             } catch (SQLException ex) {
                 Logger.getLogger(CrearRespaldo.class.getName()).log(Level.SEVERE, null, ex);
             }
    }

    public void cargarUsuarios() /// carga los usuarios en la interfaz
    {
      Funcionalidad fun = new Funcionalidad();
      fun.conectar("system","root");
      resultado=fun.usuarios();
      
      if(resultado!=null)
      {
          try 
          {
              comboUsuarios.removeAllItems();
              while(resultado.next())
              {
                  comboUsuarios.addItem(resultado.getString(1));
              }
              comboUsuarios.setSelectedIndex(-1);
              fun.Desconectar();
          } 
          catch(SQLException ex) 
          {
              Logger.getLogger(InicioSesion.class.getName()).log(Level.SEVERE, null, ex);
          }
      }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JtxtArea;
    private javax.swing.JComboBox<String> boxDirectorios;
    private javax.swing.JButton btnBorrarDir;
    private javax.swing.JButton btnCrearDirectorio;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> comboUsuarios;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDirectorio;
    private javax.swing.JLabel lblListaRespaldos;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JMenuItem submenu2;
    // End of variables declaration//GEN-END:variables
}
