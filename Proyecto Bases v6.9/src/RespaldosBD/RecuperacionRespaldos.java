package RespaldosBD;

import BaseDatos.Funcionalidad;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class RecuperacionRespaldos extends javax.swing.JFrame 
{
    public Opciones op;//se va a igualar a la ventana principal, así no se pierde la referencia de la conexión
    public String usuario;
    public String contraseña;
    public Funcionalidad db;
    List<String> listDirectorios = new ArrayList<String>();
    ResultSet resultado;
    
    Runnable run = new Runnable()  //creacion del hilo para la exportacion o importacion
    {
        @Override
         public void run(){ 
            Importar();
         }
    };
    

    public RecuperacionRespaldos() 
    {
        initComponents(); //Carga los elementos del JFrame o JPanel
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                    }
                }
            }catch(ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(CrearRespaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        
        this.setLocationRelativeTo(null); //Centa la pantalla
        this.setTitle("Recuperación de Respaldos"); //Título
        this.setResizable(false);
    }

 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegresar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblTitulo = new javax.swing.JLabel();
        btnCargarArch = new javax.swing.JButton();
        lblRuta = new javax.swing.JLabel();
        jtextRuta = new javax.swing.JTextField();
        panelRadioBut = new javax.swing.JPanel();
        radioSchema = new javax.swing.JRadioButton();
        radioTablas = new javax.swing.JRadioButton();
        boxTablas = new javax.swing.JComboBox();
        radioFull = new javax.swing.JRadioButton();
        boxDirectorios = new javax.swing.JComboBox();
        lblDirectorios = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaComando = new javax.swing.JTextArea();
        btnCargarResp = new javax.swing.JButton();
        lblTipoElegido = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        submenu2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegresar.setText("Regresar al Menú");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        lblTitulo.setBackground(new java.awt.Color(255, 0, 0));
        lblTitulo.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Recuperación de Respaldos");
        lblTitulo.setOpaque(true);

        btnCargarArch.setText("Cargar Archivo");
        btnCargarArch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarArchActionPerformed(evt);
            }
        });

        lblRuta.setText("Archivo:");

        jtextRuta.setEditable(false);
        jtextRuta.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        panelRadioBut.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Respaldo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        radioSchema.setText("Schema");
        radioSchema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSchemaActionPerformed(evt);
            }
        });

        radioTablas.setText("Tabla");
        radioTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTablasActionPerformed(evt);
            }
        });

        boxTablas.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        boxTablas.setEnabled(false);

        radioFull.setText("Full");
        radioFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFullActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRadioButLayout = new javax.swing.GroupLayout(panelRadioBut);
        panelRadioBut.setLayout(panelRadioButLayout);
        panelRadioButLayout.setHorizontalGroup(
            panelRadioButLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRadioButLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(radioTablas)
                .addGap(8, 8, 8)
                .addComponent(boxTablas, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioSchema)
                .addGap(40, 40, 40)
                .addComponent(radioFull)
                .addContainerGap(164, Short.MAX_VALUE))
        );
        panelRadioButLayout.setVerticalGroup(
            panelRadioButLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRadioButLayout.createSequentialGroup()
                .addGroup(panelRadioButLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioSchema)
                    .addComponent(radioTablas)
                    .addComponent(boxTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioFull))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        boxDirectorios.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        lblDirectorios.setText("Directorios");

        areaComando.setEditable(false);
        areaComando.setColumns(1);
        areaComando.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        areaComando.setLineWrap(true);
        areaComando.setRows(5);
        areaComando.setWrapStyleWord(true);
        jScrollPane1.setViewportView(areaComando);

        btnCargarResp.setText("Cargar Respaldo");
        btnCargarResp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarRespActionPerformed(evt);
            }
        });

        lblTipoElegido.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblTipoElegido.setText("...");

        jMenu1.setText("Opciones");

        submenu2.setText("Salir");
        submenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu2ActionPerformed(evt);
            }
        });
        jMenu1.add(submenu2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelRadioBut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDirectorios)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxDirectorios, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnCargarResp, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnCargarArch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtextRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblTipoElegido, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelRadioBut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDirectorios)
                    .addComponent(boxDirectorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarArch)
                    .addComponent(lblRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtextRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargarResp, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoElegido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        panelRadioBut.getAccessibleContext().setAccessibleName("Seleccione el elemento a cargar:");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //////////////////////////////////////////////////  ACCIONES  ////////////////////////////////////////////////////////
    
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.setVisible(false);
        op.setVisible(true);    
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void submenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_submenu2ActionPerformed

    private void btnCargarArchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarArchActionPerformed
        // TODO add your handling code here:
        JFileChooser explorador=new JFileChooser("home"); //Explorador de carpetas y archivos
        FileNameExtensionFilter filter=new FileNameExtensionFilter(".DMP","dmp"); //Muestra solo los .DMP
        explorador.setFileFilter(filter); //Aplica el filtro
        explorador.setDialogTitle("Cargar archivo Dump File"); //Título
        int seleccion=explorador.showDialog(null, "Cargar"); //Botón

        switch(seleccion)
        {
            case JFileChooser.APPROVE_OPTION: //Seleccionó cargar
            break;

            case JFileChooser.CANCEL_OPTION: //Seleccionó cancelar o cerró ventana
            break;

            case JFileChooser.ERROR_OPTION: //Viene aquí si hay error
            break;
        }

        File archivo=explorador.getSelectedFile(); //"archivo" tiene lo seleccionado
        String ruta=archivo.getName(); //"ruta" tiene la ruta del archivo seleccionado
        //System.out.println("La ruta del fichero es: "+ruta);
        jtextRuta.setText(ruta); //La ruta se muestra en el jTextField
        //para abrir
        //int seleccion=explorador.showOpenDialog(parent);

        //para guardar
        //int seleccion = explorador.showSaveDialog(parent);
    }//GEN-LAST:event_btnCargarArchActionPerformed

    private void radioTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTablasActionPerformed
        boxTablas.enable(true);
        radioSchema.setSelected(false);
        radioFull.setSelected(false);
    }//GEN-LAST:event_radioTablasActionPerformed

    private void radioSchemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSchemaActionPerformed
        boxTablas.enable(false);
        radioTablas.setSelected(false);
        radioFull.setSelected(false);
    }//GEN-LAST:event_radioSchemaActionPerformed

    private void radioFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFullActionPerformed
        boxTablas.enable(false);
        radioTablas.setSelected(false);
        radioSchema.setSelected(false);
    }//GEN-LAST:event_radioFullActionPerformed

    private void btnCargarRespActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarRespActionPerformed
        if(validaciones()){
            String mensaje="Importando respaldo "; //Variable con el mensaje "Creando respaldo "

            if(radioFull.isSelected()) //Si se selecciona la opción Full
                mensaje= mensaje+"Full..."; //El mensaje será "Creando respaldo Full..."
            
            else if (radioSchema.isSelected()) //Si se selecciona la opción Schema
                mensaje= mensaje+"del Schema..."; //El mensaje será "Creando respaldo de Schema..."
            
            else if (radioTablas.isSelected()) //Si se selecciona la opción Tablas
                mensaje= mensaje+"de Tabla..."; //El mensaje será "Creando respaldo de Tablas..."
            
            lblTipoElegido.setText(mensaje); //El label cambia su contenido con el texto
            
            btnCargarResp.setEnabled(false);//para bloquear el boton de crear
            btnRegresar.setEnabled(false);
            
            Thread h1 = new Thread(run);
            h1.start();
        }
    }//GEN-LAST:event_btnCargarRespActionPerformed

    
    //////////////////////////////////////////////////  METODOS  ////////////////////////////////////////////////////////
    
    public void cargarDirectorios()//metodo de cargar directorios
    {
        ResultSet resultado = db.cargarDirectorios();

        boxDirectorios.removeAllItems();
        listDirectorios.clear();

             try {
                 while(resultado.next())
                 {
                         boxDirectorios.addItem(resultado.getString(1));
                         listDirectorios.add(resultado.getString(2));

                 }
                 boxDirectorios.setSelectedIndex(-1);
             } catch (SQLException ex) {
                 Logger.getLogger(CrearRespaldo.class.getName()).log(Level.SEVERE, null, ex);
             }
    }
    
    public void cargarTablasUsuario()//metodo de cargar directorios
    {
        ResultSet resultado = db.cargarTablasUsuario(usuario);
       

        boxTablas.removeAllItems();
             try {
                 while(resultado.next())
                 {
                         boxTablas.addItem(resultado.getString("TABLE_NAME"));
                         
                 }
                 boxTablas.setSelectedIndex(-1);
                
             } catch (SQLException ex) {
                 Logger.getLogger(CrearRespaldo.class.getName()).log(Level.SEVERE, null, ex);
             }
    }
    
    private void Importar()
    {
           String s = null;
           String tipoRespaldo = "";//el tipo de respaldo que se hará
           String dir = "";//directorio donde se guardara el respaldo

           
           if(radioTablas.isSelected()){
                    tipoRespaldo = "TABLES = "+boxTablas.getSelectedItem().toString();
           }
           if(radioSchema.isSelected()){
                tipoRespaldo = "SCHEMAS = "+usuario;
           }
           if(radioFull.isSelected()){
               tipoRespaldo = "FULL=Y";
           }
           
           dir = boxDirectorios.getSelectedItem().toString();

           try {
                String comando;
                comando = "cmd /c " + "IMPDP" + " " + usuario +"/"+ contraseña  + " " + tipoRespaldo +" DIRECTORY = "+ dir 
                        + " DUMPFILE = " + jtextRuta.getText() +" LOGFILE = " + jtextRuta.getText() + ".log";

                // Ejcutamos el comando
                Process p = Runtime.getRuntime().exec(comando);

                BufferedReader stdInput = new BufferedReader(new InputStreamReader(
                                p.getInputStream()));

                BufferedReader stdError = new BufferedReader(new InputStreamReader(
                                p.getErrorStream()));

                // Leemos la salida del comando
                while ((s = stdInput.readLine()) != null) 
                {
                    areaComando.append(s + "\n");
                }

                // Leemos los errores si los hubiera
                while ((s = stdError.readLine()) != null)
                {
                    areaComando.append(s + "\n");
                }
                
                lblTipoElegido.setText("La Importación ha concluido");
                JOptionPane.showMessageDialog(null," La importación ha concluido..","Proceso Completado",JOptionPane.INFORMATION_MESSAGE);
                btnRegresar.setEnabled(true);
            } 
            catch (IOException e) 
            {
                System.out.println("Excepción: ");
                e.printStackTrace();
                System.exit(-1);
            }
    }

    public boolean validaciones()
    {
        if(!radioTablas.isSelected() && !radioSchema.isSelected() && !radioFull.isSelected()){
            JOptionPane.showMessageDialog(null,"Debe seleccionar el tipo de respaldo","", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(radioTablas.isSelected() && boxTablas.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null,"Debe seleccionar la tabla a respaldar","", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(boxDirectorios.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null,"Debe seleccionar un directorio","", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(jtextRuta.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Seleccione un archivo de respaldo","", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaComando;
    private javax.swing.JComboBox boxDirectorios;
    private javax.swing.JComboBox boxTablas;
    private javax.swing.JButton btnCargarArch;
    private javax.swing.JButton btnCargarResp;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jtextRuta;
    private javax.swing.JLabel lblDirectorios;
    private javax.swing.JLabel lblRuta;
    private javax.swing.JLabel lblTipoElegido;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel panelRadioBut;
    private javax.swing.JRadioButton radioFull;
    private javax.swing.JRadioButton radioSchema;
    private javax.swing.JRadioButton radioTablas;
    private javax.swing.JMenuItem submenu2;
    // End of variables declaration//GEN-END:variables
}
